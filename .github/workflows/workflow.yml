name: Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, reopened, synchronize, labeled ]

permissions:
  contents: read

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') && (github.event.pull_request == null || github.event.pull_request.head.repo.full_name == github.repository) }}

    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: ['ubuntu-latest']
        php: ['8.3', '8.4']
        experimental: [false]
        include:
          - php: '8.5'
            operating-system: 'ubuntu-latest'
            experimental: true
      fail-fast: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        id: setup-php
        uses: shivammathur/setup-php@2.32.0
        with:
          php-version: ${{ matrix.php }}
          extensions: intl
          ini-values: post_max_size=256M, max_execution_time=180
          coverage: pcov
          tools: composer, phpstan, phpunit

      - name: Print PHP Version
        run: echo ${{ steps.setup-php.outputs.php-version }}

      - name: Setup Cache for Composer
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ~/.composer/cache
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
            ${{ runner.os }}-php-${{ matrix.php }}-composer-
            ${{ runner.os }}-composer-

      - name: Validate composer.json and composer.lock
        run: composer validate --no-check-all --strict

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist
        shell: bash

      - name: Run PHPStan (Static Analysis)
        run: |
          vendor/bin/phpstan analyse --configuration phpstan.neon
        shell: bash

      - name: Run Unit Tests and Generate Coverage
        run: vendor/bin/phpunit --configuration phpunit.xml --coverage-clover=coverage.xml

      - name: Upload Build Artifact
        if: ${{ matrix.php == '8.3' }}
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.php }}
          path: src/

#      - name: Upload Coverage Reports to Codecov
#        if: ${{ matrix.php == '8.3' }}
#        uses: codecov/codecov-action@v4.6.0
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
