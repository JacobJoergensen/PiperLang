name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, reopened, synchronize, labeled ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ 'ubuntu-latest']
        php-versions: ['8.3']
      fail-fast: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Validate composer.json and composer.lock
        run: composer validate --no-check-all --strict

      - name: Setup PHP
        id: setup-php
        uses: shivammathur/setup-php@2.31.0
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl
          ini-values: post_max_size=256M, max_execution_time=180
          coverage: xdebug3
          tools: phpstan, phpunit

      - name: Print PHP Version
        run: echo ${{ steps.setup-php.outputs.php-version }}

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHPStan (Static Analysis)
        run: |
          vendor/bin/phpstan analyse --level max

      - name: Run Unit Tests and Build Coverage
        run: vendor/bin/phpunit --configuration phpunit.xml --coverage-clover=coverage.xml

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build
          path: src/

      - name: Upload Coverage Reports to Codecov
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
